import { jsx, css } from '@emotion/react';
import classnames from 'classnames';
import { observer } from 'mobx-react-lite';
import { useTheme, CacheProvider } from '../../../providers';
const CSS = {
    breadcrumbs: () => css({
        '& .ss__breadcrumbs__crumbs': {
            padding: '0',
        },
        '& .ss__breadcrumbs__crumbs__crumb, & .ss__breadcrumbs__crumbs__separator': {
            padding: '0 5px',
            display: 'inline-block',
        },
    }),
};
export const Breadcrumbs = observer((properties) => {
    const globalTheme = useTheme();
    const props = {
        // default props
        separator: '>',
        // global theme
        ...globalTheme?.components?.breadcrumbs,
        // props
        ...properties,
        ...properties.theme?.components?.breadcrumbs,
    };
    const { data, separator, disableStyles, className, style } = props;
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.breadcrumbs(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return (jsx(CacheProvider, null,
        jsx("div", { ...styling, className: classnames('ss__breadcrumbs', className) },
            jsx("ul", { className: "ss__breadcrumbs__crumbs" }, data
                .map((crumb) => (jsx("li", { className: "ss__breadcrumbs__crumbs__crumb" }, crumb.url ? jsx("a", { href: crumb.url }, crumb.label) : crumb.label)))
                .reduce((prev, curr) => [prev, jsx("li", { className: "ss__breadcrumbs__crumbs__separator" }, separator), curr])))));
});

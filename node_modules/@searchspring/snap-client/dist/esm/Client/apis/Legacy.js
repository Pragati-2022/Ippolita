import { API } from '.';
export class LegacyAPI extends API {
    async getEndpoint(queryParameters, path = '/api/search/search.json') {
        queryParameters.resultsFormat = 'native';
        const headerParameters = {};
        //remove pageLoadId from cache key query params
        const cacheParameters = { ...queryParameters };
        delete cacheParameters.pageLoadId;
        const legacyResponse = await this.request({
            path,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, path + JSON.stringify(cacheParameters));
        return legacyResponse;
    }
    async postMeta(requestParameters) {
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        const response = await this.request({
            path: '/api/meta/meta.json',
            method: 'POST',
            headers: headerParameters,
            body: requestParameters,
        }, '/api/meta/meta.json' + JSON.stringify(requestParameters));
        return response;
    }
    async getMeta(queryParameters) {
        const headerParameters = {};
        const response = await this.request({
            path: '/api/meta/meta.json',
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, '/api/meta/meta.json' + JSON.stringify(queryParameters));
        return response;
    }
    async getSearch(queryParameters) {
        queryParameters.ajaxCatalog = 'Snap';
        return this.getEndpoint(queryParameters, '/api/search/search.json');
    }
    async getAutocomplete(queryParameters) {
        queryParameters.ajaxCatalog = 'Snap';
        return this.getEndpoint(queryParameters, '/api/search/autocomplete.json');
    }
    async getFinder(queryParameters) {
        queryParameters.ajaxCatalog = 'Snap';
        return this.getEndpoint(queryParameters, '/api/search/finder.json');
    }
}

import type { SearchResponseModel, MetaResponseModel } from '@searchspring/snapi-types';
import type { SearchStoreConfig, StoreServices } from '../types';
import { SearchMerchandisingStore, SearchFacetStore, SearchFilterStore, SearchResultStore, SearchPaginationStore, SearchSortingStore, SearchQueryStore, SearchHistoryStore } from './Stores';
import { AbstractStore } from '../Abstract/AbstractStore';
import { StorageStore } from '../Storage/StorageStore';
export declare class SearchStore extends AbstractStore {
    services: StoreServices;
    meta: MetaResponseModel;
    merchandising: SearchMerchandisingStore;
    search: SearchQueryStore;
    facets: SearchFacetStore;
    filters: SearchFilterStore;
    results: SearchResultStore;
    pagination: SearchPaginationStore;
    sorting: SearchSortingStore;
    storage: StorageStore;
    history: SearchHistoryStore;
    constructor(config: SearchStoreConfig, services: StoreServices);
    reset(): void;
    update(data?: SearchResponseModel & {
        meta?: MetaResponseModel;
    }): void;
}
//# sourceMappingURL=SearchStore.d.ts.map
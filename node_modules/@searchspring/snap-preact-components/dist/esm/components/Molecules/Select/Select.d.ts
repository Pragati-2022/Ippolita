/// <reference types="react" />
import { ComponentProps } from '../../../types';
import { IconType } from '../../Atoms/Icon';
export declare const Select: ((properties: SelectProps) => JSX.Element) & {
    displayName: string;
};
export declare type Option = {
    label: string;
    value: string | number;
    [otherOptions: string]: any;
};
export interface SelectProps extends ComponentProps {
    options: Option[];
    backgroundColor?: string;
    borderColor?: string;
    color?: string;
    clearSelection?: string;
    disableClickOutside?: boolean;
    disabled?: boolean;
    hideLabelOnSelection?: boolean;
    iconColor?: string;
    iconClose?: IconType | string;
    iconOpen?: IconType | string;
    label?: string | JSX.Element;
    native?: boolean;
    onSelect?: (e: React.ChangeEvent<HTMLSelectElement>, option: Option | undefined) => void;
    selected?: Option;
    separator?: string | JSX.Element;
    startOpen?: boolean;
    stayOpenOnSelection?: boolean;
}
//# sourceMappingURL=Select.d.ts.map
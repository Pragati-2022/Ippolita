"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchInput = void 0;
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var Icon_1 = require("../../Atoms/Icon/Icon");
var utilities_1 = require("../../../utilities");
var providers_1 = require("../../../providers");
var CSS = {
    searchInput: function (_a) {
        var _b;
        var theme = _a.theme;
        return (0, react_1.css)({
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            border: "1px solid ".concat(((_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.primary) || '#ccc'),
            '& .ss__icon': {
                padding: '5px',
            },
            '& .ss__search-input__input': {
                width: '100%',
                outline: 'none',
                border: '0',
                boxSizing: 'border-box',
            },
        });
    },
};
exports.SearchInput = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c, _d;
    var globalTheme = (0, providers_1.useTheme)();
    var theme = __assign(__assign({}, globalTheme), properties.theme);
    var props = __assign(__assign(__assign({ 
        // default props
        placeholder: 'Search', hideIcon: false }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.searchInput), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.searchInput);
    var placeholder = props.placeholder, onChange = props.onChange, hideIcon = props.hideIcon, disableStyles = props.disableStyles, style = props.style, className = props.className;
    var subProps = {
        icon: __assign(__assign(__assign({ 
            // default props
            className: 'ss__search-input__icon' }, (_d = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _d === void 0 ? void 0 : _d.icon), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
    };
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.searchInput({ theme: theme }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__search-input', className) }),
            !hideIcon && (0, react_1.jsx)(Icon_1.Icon, __assign({}, subProps.icon, { icon: "search" })),
            (0, react_1.jsx)("input", { type: "text", className: "ss__search-input__input", onChange: function (e) {
                    onChange && onChange(e);
                }, placeholder: placeholder }))));
});

import { observable, makeObservable } from 'mobx';
export class SearchQueryStore {
    constructor(services, search) {
        const observables = {};
        if (search?.query) {
            this.query = new Query(services, search.query);
            observables.query = observable;
        }
        if (search?.didYouMean) {
            this.didYouMean = new Query(services, search.didYouMean);
            observables.didYouMean = observable;
        }
        if (search?.originalQuery) {
            this.originalQuery = new Query(services, search.originalQuery);
            observables.originalQuery = observable;
        }
        if (search?.matchType) {
            this.matchType = search.matchType;
            observables.matchType = observable;
        }
        makeObservable(this, observables);
    }
}
export class Query {
    constructor(services, query) {
        this.string = query;
        this.url = services?.urlManager?.remove('page').remove('filter').set('query', this.string);
        makeObservable(this, {
            string: observable,
        });
    }
}

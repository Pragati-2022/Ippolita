"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Skeleton = void 0;
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var providers_1 = require("../../../providers");
var CSS = {
    skeleton: function (_a) {
        var width = _a.width, height = _a.height, round = _a.round, backgroundColor = _a.backgroundColor, animatedColor = _a.animatedColor, animation = _a.animation;
        return (0, react_1.css)({
            width: width,
            height: height,
            borderRadius: round ? width : '0.25rem',
            backgroundColor: backgroundColor,
            display: 'inline-flex',
            lineHeight: '1',
            position: 'relative',
            overflow: 'hidden',
            zIndex: '1' /* Necessary for overflow: hidden to work correctly in Safari */,
            '&:after': {
                content: '""',
                display: 'block',
                position: 'absolute',
                left: '0',
                right: '0',
                height: '100%',
                backgroundRepeat: 'no-repeat',
                backgroundImage: "linear-gradient(90deg, ".concat(backgroundColor, ", ").concat(animatedColor, ", ").concat(backgroundColor, ")"),
                transform: 'translateX(-100%)',
                animation: "".concat(animation, " 1.5s linear infinite"),
                animationTimingFunction: 'ease-in-out',
            },
        });
    },
    animation: (0, react_1.keyframes)({
        from: {
            transform: 'translateX(-100%)',
        },
        to: {
            transform: 'translateX(100%)',
        },
    }),
};
exports.Skeleton = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({ 
        // default props
        backgroundColor: '#ebebeb', animatedColor: '#f5f5f5' }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.skeleton), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.skeleton);
    var width = props.width, height = props.height, round = props.round, backgroundColor = props.backgroundColor, animatedColor = props.animatedColor, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.skeleton({ width: width, height: height, round: round, backgroundColor: backgroundColor, animatedColor: animatedColor, animation: CSS.animation }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__skeleton', className) }))));
});

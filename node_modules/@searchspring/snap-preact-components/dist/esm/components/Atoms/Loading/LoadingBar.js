/** @jsx jsx */
import { Fragment } from 'preact';
import { jsx, css, keyframes } from '@emotion/react';
import classnames from 'classnames';
import { useTheme, CacheProvider } from '../../../providers';
const CSS = {
    loadingBar: ({ color, height, backgroundColor, theme, animation }) => css({
        height: height,
        position: 'fixed',
        top: '0',
        left: '0',
        right: '0',
        margin: 'auto',
        transition: 'opacity 0.3s ease',
        opacity: '1',
        visibility: 'visible',
        zIndex: '10000',
        background: backgroundColor || theme?.colors?.secondary || '#f8f8f8',
        '& .ss__loading-bar__bar': {
            position: 'absolute',
            top: '0',
            left: '-200px',
            height: '100%',
            background: `${color || theme?.colors?.primary || '#ccc'}`,
            animation: `${animation} 2s linear infinite`,
        },
    }),
    animation: keyframes({
        from: { left: '-200px', width: '30%' },
        '50%': { width: '30%' },
        '70%': { width: '70%' },
        '80%': { left: '50%' },
        '95%': { left: '120%' },
        to: { left: '100%' },
    }),
};
export function LoadingBar(properties) {
    const globalTheme = useTheme();
    const theme = { ...globalTheme, ...properties.theme };
    const props = {
        // default props
        height: '5px',
        // global theme
        ...globalTheme?.components?.loadingbar,
        // props
        ...properties,
        ...properties.theme?.components?.loadingbar,
    };
    const { active, color, backgroundColor, height, disableStyles, className, style } = props;
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.loadingBar({ height, color, backgroundColor, theme, animation: CSS.animation }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return active ? (jsx(CacheProvider, null,
        jsx("div", { ...styling, className: classnames('ss__loading-bar', className) },
            jsx("div", { className: "ss__loading-bar__bar" })))) : (jsx(Fragment, null));
}

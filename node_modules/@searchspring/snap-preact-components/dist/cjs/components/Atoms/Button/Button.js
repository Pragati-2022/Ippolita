"use strict";
/** @jsx jsx */
/** @jsx h */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
var preact_1 = require("preact");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var providers_1 = require("../../../providers");
var useA11y_1 = require("../../../hooks/useA11y");
var CSS = {
    button: function (_a) {
        var _b, _c, _d;
        var color = _a.color, backgroundColor = _a.backgroundColor, borderColor = _a.borderColor, theme = _a.theme;
        return (0, react_1.css)({
            display: 'inline-flex',
            padding: '5px 10px',
            position: 'relative',
            color: color || ((_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.primary),
            outline: 0,
            backgroundColor: backgroundColor || '#fff',
            border: "1px solid ".concat(borderColor || color || ((_c = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _c === void 0 ? void 0 : _c.primary) || '#333'),
            '&:hover': {
                cursor: 'pointer',
                backgroundColor: ((_d = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _d === void 0 ? void 0 : _d.hover) || '#f8f8f8',
            },
            '&.ss__button--disabled': {
                opacity: 0.7,
                borderColor: 'rgba(51,51,51,0.7)',
                backgroundColor: 'initial',
                '&:hover': {
                    cursor: 'default',
                },
            },
        });
    },
    native: function () { return (0, react_1.css)({}); },
};
exports.Button = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c;
    var globalTheme = (0, providers_1.useTheme)();
    var theme = __assign(__assign({}, globalTheme), properties.theme);
    var props = __assign(__assign(__assign({ 
        // default props
        disableA11y: false }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.button), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.button);
    var backgroundColor = props.backgroundColor, borderColor = props.borderColor, color = props.color, content = props.content, children = props.children, disabled = props.disabled, native = props.native, onClick = props.onClick, disableA11y = props.disableA11y, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var elementProps = {
        css: disableStyles
            ? [style]
            : native
                ? [CSS.native(), style]
                : [
                    CSS.button({
                        color: color,
                        backgroundColor: backgroundColor,
                        borderColor: borderColor,
                        theme: theme,
                    }),
                    style,
                ],
        className: (0, classnames_1.default)('ss__button', { 'ss__button--disabled': disabled }, className),
        disabled: disabled,
        onClick: function (e) { return !disabled && onClick && onClick(e); },
    };
    var a11yProps = {
        ref: function (e) { return (0, useA11y_1.useA11y)(e); },
    };
    return content || children ? ((0, react_1.jsx)(providers_1.CacheProvider, null, native ? ((0, react_1.jsx)("button", __assign({}, elementProps),
        content,
        children)) : ((0, react_1.jsx)("div", __assign({}, (!disableA11y ? a11yProps : {}), elementProps, { role: 'button', "aria-disabled": disabled }),
        content,
        children)))) : ((0, react_1.jsx)(preact_1.Fragment, null));
});

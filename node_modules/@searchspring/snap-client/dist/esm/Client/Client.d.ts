import type { ClientGlobals, ClientConfig, TrendingRequestModel, TrendingResponseModel, RecommendCombinedRequestModel, RecommendCombinedResponseModel } from '../types';
import type { MetaRequestModel, MetaResponseModel, SearchRequestModel, SearchResponseModel, AutocompleteRequestModel, AutocompleteResponseModel } from '@searchspring/snapi-types';
export declare class Client {
    private mode;
    private globals;
    private config;
    private requesters;
    constructor(globals: ClientGlobals, config?: ClientConfig);
    meta(params?: MetaRequestModel): Promise<MetaResponseModel>;
    autocomplete(params?: AutocompleteRequestModel): Promise<[MetaResponseModel, AutocompleteResponseModel]>;
    search(params?: SearchRequestModel): Promise<[MetaResponseModel, SearchResponseModel]>;
    finder(params?: SearchRequestModel): Promise<[MetaResponseModel, SearchResponseModel]>;
    trending(params: Partial<TrendingRequestModel>): Promise<TrendingResponseModel>;
    recommend(params: RecommendCombinedRequestModel): Promise<RecommendCombinedResponseModel>;
}
//# sourceMappingURL=Client.d.ts.map
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterSummary = void 0;
/** @jsx jsx */
var preact_1 = require("preact");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var Filter_1 = require("../../Molecules/Filter");
var utilities_1 = require("../../../utilities");
var providers_1 = require("../../../providers");
var CSS = {
    filterSummary: function () {
        return (0, react_1.css)({
            '& .ss__filter-summary__filter': {
                margin: '5px 10px 5px 0',
            },
            '& .ss__filter-summary__title': {
                fontSize: '1.2em',
            },
        });
    },
};
exports.FilterSummary = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c, _d, _e, _f, _g;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({ 
        // default props
        title: 'Current Filters', clearAllLabel: 'Clear All', clearAllIcon: 'close-thin', filterIcon: 'close-thin', filters: (_b = (_a = properties.controller) === null || _a === void 0 ? void 0 : _a.store) === null || _b === void 0 ? void 0 : _b.filters, onClearAllClick: function () { var _a; return (_a = properties.controller) === null || _a === void 0 ? void 0 : _a.urlManager.remove('filter').remove('page').go(); }, separator: ':' }, (_c = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _c === void 0 ? void 0 : _c.filterSummary), properties), (_e = (_d = properties.theme) === null || _d === void 0 ? void 0 : _d.components) === null || _e === void 0 ? void 0 : _e.filterSummary);
    var filters = props.filters, title = props.title, filterIcon = props.filterIcon, clearAllIcon = props.clearAllIcon, separator = props.separator, hideFacetLabel = props.hideFacetLabel, clearAllLabel = props.clearAllLabel, hideClearAll = props.hideClearAll, onClick = props.onClick, onClearAllClick = props.onClearAllClick, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var subProps = {
        filter: __assign(__assign(__assign({ 
            // default props
            clearAllLabel: '', className: 'ss__filter-summary__filter' }, (_f = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _f === void 0 ? void 0 : _f.filter), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            separator: separator,
            hideFacetLabel: hideFacetLabel,
            icon: filterIcon,
        })), { 
            // component theme overrides
            theme: props.theme }),
    };
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.filterSummary(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return (filters === null || filters === void 0 ? void 0 : filters.length) ? ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__filter-summary', className) }),
            (0, react_1.jsx)("div", { className: "ss__filter-summary__title" }, title),
            filters.map(function (filter) { return ((0, react_1.jsx)(Filter_1.Filter, __assign({}, subProps.filter, { filter: filter, onClick: function (e) { return onClick && onClick(e, filter); } }))); }),
            !hideClearAll && ((0, react_1.jsx)(Filter_1.Filter, __assign({}, subProps.filter, { icon: clearAllIcon, className: "".concat((_g = subProps === null || subProps === void 0 ? void 0 : subProps.filter) === null || _g === void 0 ? void 0 : _g.className, " ss__filter-summary__clear-all"), hideFacetLabel: true, valueLabel: clearAllLabel, onClick: function (e) { return onClearAllClick && onClearAllClick(e); } })))))) : ((0, react_1.jsx)(preact_1.Fragment, null));
});

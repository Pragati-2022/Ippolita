import { jsx, css } from '@emotion/react';
import { useRef } from 'preact/hooks';
import { observer } from 'mobx-react-lite';
import { useTheme } from '../../../../providers';
import { useIntersection } from '../../../../hooks';
import classnames from 'classnames';
const CSS = {
    RecommendationResultTracker: () => css({}),
};
export const RecommendationResultTracker = observer((properties) => {
    const globalTheme = useTheme();
    const props = {
        // default props
        // global theme
        ...globalTheme?.components?.RecommendationResultTracker,
        // props
        ...properties,
        ...properties.theme?.components?.RecommendationResultTracker,
    };
    const { children, result, controller, className, disableStyles, style } = props;
    const resultRef = useRef(null);
    const resultInViewport = useIntersection(resultRef, '0px');
    if (!controller.events.render) {
        controller.log.warn('<RecommendationResultTracker> used without <RecommendationProfileTracker>');
    }
    controller.track.product.render(result);
    if (resultInViewport) {
        // intersection observer can trigger in any random order,
        // so we need to check if profile impression has been sent and send if not.
        if (!controller.events.impression) {
            controller.track.impression();
        }
        controller.track.product.impression(result);
    }
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.RecommendationResultTracker(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return (jsx("div", { className: classnames('ss__recommendation-result-tracker', className), onClick: (e) => controller.track.product.click(e, result), ref: resultRef, ...styling }, children));
});

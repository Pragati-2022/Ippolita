"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Product = exports.Banner = exports.SearchResultStore = void 0;
var mobx_1 = require("mobx");
var SearchResultStore = /** @class */ (function (_super) {
    __extends(SearchResultStore, _super);
    function SearchResultStore(config, services, resultData, paginationData, merchData) {
        var _a;
        var results = (resultData || []).map(function (result) {
            return new Product(services, result);
        });
        if ((_a = merchData === null || merchData === void 0 ? void 0 : merchData.content) === null || _a === void 0 ? void 0 : _a.inline) {
            var banners = merchData.content.inline
                .sort(function (a, b) {
                return a.config.position.index - b.config.position.index;
            })
                .map(function (banner) {
                return new Banner(services, banner);
            });
            if (banners && (paginationData === null || paginationData === void 0 ? void 0 : paginationData.totalResults)) {
                results = addBannersToResults(config, results, banners, paginationData);
            }
        }
        return _super.apply(this, results) || this;
    }
    Object.defineProperty(SearchResultStore, Symbol.species, {
        get: function () {
            return Array;
        },
        enumerable: false,
        configurable: true
    });
    return SearchResultStore;
}(Array));
exports.SearchResultStore = SearchResultStore;
var Banner = /** @class */ (function () {
    function Banner(services, banner) {
        this.type = 'banner';
        this.attributes = {};
        this.mappings = {
            core: {},
        };
        this.custom = {};
        this.id = 'ss-ib-' + banner.config.position.index;
        this.config = banner.config;
        this.value = banner.value;
        (0, mobx_1.makeObservable)(this, {
            id: mobx_1.observable,
            mappings: mobx_1.observable,
            attributes: mobx_1.observable,
        });
    }
    return Banner;
}());
exports.Banner = Banner;
var Product = /** @class */ (function () {
    function Product(services, result) {
        var _a;
        this.type = 'product';
        this.attributes = {};
        this.mappings = {
            core: {},
        };
        this.custom = {};
        this.children = [];
        this.id = result.id;
        this.attributes = result.attributes;
        this.mappings = result.mappings;
        if ((_a = result === null || result === void 0 ? void 0 : result.children) === null || _a === void 0 ? void 0 : _a.length) {
            this.children = result.children.map(function (variant, index) {
                return new Child(services, __assign({ id: "".concat(result.id, "-").concat(index) }, variant));
            });
        }
        (0, mobx_1.makeObservable)(this, {
            id: mobx_1.observable,
            attributes: mobx_1.observable,
            custom: mobx_1.observable,
        });
        // must set all subo
        var coreObservables = Object.keys(this.mappings.core).reduce(function (map, key) {
            var _a;
            return __assign(__assign({}, map), (_a = {}, _a[key] = mobx_1.observable, _a));
        }, {});
        (0, mobx_1.makeObservable)(this.mappings.core, coreObservables);
    }
    return Product;
}());
exports.Product = Product;
var Child = /** @class */ (function () {
    function Child(services, result) {
        this.type = 'child';
        this.attributes = {};
        this.custom = {};
        this.id = result.id;
        this.attributes = result.attributes;
        (0, mobx_1.makeObservable)(this, {
            id: mobx_1.observable,
            attributes: mobx_1.observable,
            custom: mobx_1.observable,
        });
    }
    return Child;
}());
function addBannersToResults(config, results, banners, paginationData) {
    var _a;
    var productCount = results.length;
    var minIndex = paginationData.pageSize * (paginationData.page - 1);
    var maxIndex = minIndex + paginationData.pageSize;
    if ((_a = config === null || config === void 0 ? void 0 : config.settings) === null || _a === void 0 ? void 0 : _a.infinite) {
        minIndex = 0;
    }
    banners
        .reduce(function (adding, banner) {
        var resultCount = productCount + adding.length;
        if (banner.config.position.index >= minIndex && (banner.config.position.index < maxIndex || resultCount < paginationData.pageSize)) {
            adding.push(banner);
        }
        return adding;
    }, [])
        .forEach(function (banner) {
        var adjustedIndex = banner.config.position.index - minIndex;
        results.splice(adjustedIndex, 0, banner);
    });
    return results;
}

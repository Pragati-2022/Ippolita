import { UrlManager } from '@searchspring/snap-url-manager';
import { AbstractStore } from '../Abstract/AbstractStore';
import { SearchFilterStore, SearchResultStore, SearchMerchandisingStore, SearchPaginationStore, SearchSortingStore } from '../Search/Stores';
import { StorageStore } from '../Storage/StorageStore';
import { AutocompleteStateStore, AutocompleteTermStore, AutocompleteQueryStore, AutocompleteFacetStore, AutocompleteTrendingStore, AutocompleteHistoryStore } from './Stores';
import type { AutocompleteResponseModel, MetaResponseModel } from '@searchspring/snapi-types';
import type { TrendingResponseModel } from '@searchspring/snap-client';
import type { AutocompleteStoreConfig, StoreServices } from '../types';
export declare class AutocompleteStore extends AbstractStore {
    services: StoreServices;
    meta: MetaResponseModel;
    merchandising: SearchMerchandisingStore;
    search: AutocompleteQueryStore;
    terms: AutocompleteTermStore;
    facets: AutocompleteFacetStore;
    filters: SearchFilterStore;
    results: SearchResultStore;
    pagination: SearchPaginationStore;
    sorting: SearchSortingStore;
    state: AutocompleteStateStore;
    storage: StorageStore;
    trending: AutocompleteTrendingStore;
    history: AutocompleteHistoryStore;
    constructor(config: AutocompleteStoreConfig, services: StoreServices);
    reset(): void;
    initHistory(): void;
    resetTerms(): void;
    resetSuggestions(): void;
    resetTrending(): void;
    resetHistory(): void;
    setService(name: keyof StoreServices, service: UrlManager): void;
    updateTrendingTerms(data: TrendingResponseModel): void;
    update(data?: AutocompleteResponseModel & {
        meta?: MetaResponseModel;
    }): void;
}
//# sourceMappingURL=AutocompleteStore.d.ts.map
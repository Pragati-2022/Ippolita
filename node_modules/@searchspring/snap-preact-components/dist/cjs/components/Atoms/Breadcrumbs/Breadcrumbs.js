"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Breadcrumbs = void 0;
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var providers_1 = require("../../../providers");
var CSS = {
    breadcrumbs: function () {
        return (0, react_1.css)({
            '& .ss__breadcrumbs__crumbs': {
                padding: '0',
            },
            '& .ss__breadcrumbs__crumbs__crumb, & .ss__breadcrumbs__crumbs__separator': {
                padding: '0 5px',
                display: 'inline-block',
            },
        });
    },
};
exports.Breadcrumbs = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({ 
        // default props
        separator: '>' }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.breadcrumbs), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.breadcrumbs);
    var data = props.data, separator = props.separator, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.breadcrumbs(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__breadcrumbs', className) }),
            (0, react_1.jsx)("ul", { className: "ss__breadcrumbs__crumbs" }, data
                .map(function (crumb) { return ((0, react_1.jsx)("li", { className: "ss__breadcrumbs__crumbs__crumb" }, crumb.url ? (0, react_1.jsx)("a", { href: crumb.url }, crumb.label) : crumb.label)); })
                .reduce(function (prev, curr) { return [prev, (0, react_1.jsx)("li", { className: "ss__breadcrumbs__crumbs__separator" }, separator), curr]; })))));
});

import { BeaconEvent } from './BeaconEvent';
import { TrackerGlobals, TrackMethods, BeaconContext, TrackerConfig } from './types';
export declare const BATCH_TIMEOUT = 200;
export declare class Tracker {
    private mode;
    private globals;
    private localStorage;
    private context;
    private isSending;
    private config;
    private targeters;
    constructor(globals: TrackerGlobals, config?: TrackerConfig);
    getGlobals(): TrackerGlobals;
    getContext(): BeaconContext;
    retarget(): void;
    track: TrackMethods;
    updateContext: (key: keyof BeaconContext, value: any) => void;
    getUserId: () => string | undefined | null;
    getSessionId: () => string | undefined;
    getShopperId: () => string | undefined;
    sendPreflight: () => void;
    cookies: {
        cart: {
            get: () => string[];
            set: (items: string[]) => void;
            add: (items: string[]) => void;
            remove: (items: string[]) => void;
            clear: () => void;
        };
        viewed: {
            get: () => string[];
        };
    };
    sendEvents: (eventsToSend?: BeaconEvent[] | undefined) => void;
}
//# sourceMappingURL=Tracker.d.ts.map
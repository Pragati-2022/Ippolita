/// <reference types="react" />
import SwiperCore from 'swiper/core';
import { SwiperOptions } from 'swiper';
import { ComponentProps, BreakpointsProps } from '../../../types';
export declare const defaultCarouselBreakpoints: {
    0: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
    480: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
    768: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
    1024: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
    1200: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
};
export declare const defaultVerticalCarouselBreakpoints: {
    0: {
        slidesPerView: number;
        slidesPerGroup: number;
        spaceBetween: number;
    };
};
export declare const Carousel: ((properties: CarouselProps) => JSX.Element) & {
    displayName: string;
};
export interface CarouselProps extends ComponentProps {
    breakpoints?: BreakpointsProps;
    prevButton?: JSX.Element | string;
    nextButton?: JSX.Element | string;
    hideButtons?: boolean;
    loop?: boolean;
    vertical?: boolean;
    pagination?: boolean | SwiperOptions['pagination'];
    autoAdjustSlides?: boolean;
    onClick?: (swiper: SwiperCore, e: MouseEvent | TouchEvent | PointerEvent) => void;
    onNextButtonClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    onPrevButtonClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    onInit?: (swiper: SwiperCore) => void;
    modules?: any[];
    children: JSX.Element[];
}
//# sourceMappingURL=Carousel.d.ts.map
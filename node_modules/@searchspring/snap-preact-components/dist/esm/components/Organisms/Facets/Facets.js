/** @jsx jsx */
import { Fragment } from 'preact';
import { jsx, css } from '@emotion/react';
import classnames from 'classnames';
import { observer } from 'mobx-react-lite';
import { Facet } from '../Facet';
import { useTheme, CacheProvider } from '../../../providers';
import { defined } from '../../../utilities';
const CSS = {
    facets: () => css({}),
};
export const Facets = observer((properties) => {
    const globalTheme = useTheme();
    const props = {
        // default props
        facets: properties.controller?.store?.facets,
        // global theme
        ...globalTheme?.components?.facets,
        // props
        ...properties,
        ...properties.theme?.components?.facets,
    };
    const { limit, disableStyles, className, style } = props;
    let { facets } = props;
    if (limit && facets && limit > 0) {
        facets = facets.slice(0, +limit);
    }
    const subProps = {
        facet: {
            // default props
            className: 'ss__facets__facet',
            // global theme
            ...globalTheme?.components?.facet,
            // inherited props
            ...defined({
                disableStyles,
            }),
            // component theme overrides
            theme: props.theme,
        },
    };
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.facets(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return facets && facets?.length > 0 ? (jsx(CacheProvider, null,
        jsx("div", { className: classnames('ss__facets', className), ...styling }, facets.map((facet) => (jsx(Facet, { ...subProps.facet, facet: facet })))))) : (jsx(Fragment, null));
});

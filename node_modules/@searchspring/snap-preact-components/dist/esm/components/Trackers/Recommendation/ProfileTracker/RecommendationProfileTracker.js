/** @jsx jsx */
import { Fragment, toChildArray } from 'preact';
import { jsx, css } from '@emotion/react';
import { useRef } from 'preact/hooks';
import { observer } from 'mobx-react-lite';
import { useTheme } from '../../../../providers';
import { useIntersection } from '../../../../hooks';
import classnames from 'classnames';
const CSS = {
    RecommendationProfileTracker: () => css({}),
};
export const RecommendationProfileTracker = observer((properties) => {
    const globalTheme = useTheme();
    const props = {
        // default props
        // global theme
        ...globalTheme?.components?.RecommendationProfileTracker,
        // props
        ...properties,
        ...properties.theme?.components?.RecommendationProfileTracker,
    };
    const { children, controller, className, style, disableStyles } = props;
    const childs = toChildArray(children);
    // do impression tracking for "profile"
    const componentRef = useRef(null);
    const inViewport = useIntersection(componentRef, '0px');
    if (inViewport) {
        controller.track.impression();
    }
    // takes care of rendering profile
    childs.length && controller.track.render();
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.RecommendationProfileTracker(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return childs.length ? (jsx("div", { className: classnames('ss__recommendation-profile-tracker', className), onClick: (e) => controller.track.click(e), ref: componentRef, ...styling }, children)) : (jsx(Fragment, null));
});

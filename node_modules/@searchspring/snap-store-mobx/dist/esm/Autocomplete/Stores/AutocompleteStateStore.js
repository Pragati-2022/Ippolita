import { observable, action, makeObservable } from 'mobx';
export class AutocompleteStateStore {
    constructor(services) {
        this.focusedInput = undefined;
        this.input = undefined;
        this.locks = {
            terms: new Lock(false),
            facets: new Lock(false),
        };
        this.url = services.urlManager;
        makeObservable(this, {
            focusedInput: observable,
            locks: observable,
            input: observable,
            reset: action,
        });
    }
    reset() {
        this.input = undefined;
        this.locks.terms.reset();
        this.locks.facets.reset();
    }
}
export class Lock {
    constructor(state = false) {
        this.state = this.startState = state;
    }
    reset() {
        this.state = this.startState;
    }
    get locked() {
        return this.state;
    }
    lock() {
        this.state = true;
    }
    unlock() {
        this.state = false;
    }
}

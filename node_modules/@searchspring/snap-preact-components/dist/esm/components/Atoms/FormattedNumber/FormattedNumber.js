/** @jsx jsx */
import { Fragment } from 'preact';
import { jsx, css } from '@emotion/react';
import { filters } from '@searchspring/snap-toolbox';
import classnames from 'classnames';
import { useTheme, CacheProvider } from '../../../providers';
const CSS = {
    formattedNumber: () => css({}),
};
export function FormattedNumber(properties) {
    const globalTheme = useTheme();
    const props = {
        // default props
        symbol: '',
        decimalPlaces: 3,
        padDecimalPlaces: true,
        thousandsSeparator: '',
        decimalSeparator: '.',
        symbolAfter: true,
        // global theme
        ...globalTheme?.components?.formattedNumber,
        // props
        ...properties,
        ...properties.theme?.components?.formattedNumber,
    };
    const { value, symbol, decimalPlaces, padDecimalPlaces, thousandsSeparator, decimalSeparator, symbolAfter, disableStyles, className, style, raw } = props;
    const formattedNumber = filters.formatNumber(value, {
        symbol,
        decimalPlaces,
        padDecimalPlaces,
        thousandsSeparator,
        decimalSeparator,
        symbolAfter,
    });
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.formattedNumber(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return raw ? (jsx(Fragment, null, formattedNumber)) : (jsx(CacheProvider, null,
        jsx("span", { className: classnames('ss__formatted-number', className), ...styling }, formattedNumber)));
}

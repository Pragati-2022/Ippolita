"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Icon = void 0;
/** @jsx jsx */
var preact_1 = require("preact");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var providers_1 = require("../../../providers");
var paths_1 = require("./paths");
var CSS = {
    icon: function (_a) {
        var _b;
        var color = _a.color, height = _a.height, width = _a.width, size = _a.size, theme = _a.theme;
        return (0, react_1.css)({
            fill: color || ((_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.primary),
            width: width || size,
            height: height || size,
            position: 'relative',
        });
    },
};
function Icon(properties) {
    var _a, _b, _c;
    var globalTheme = (0, providers_1.useTheme)();
    var theme = __assign(__assign({}, globalTheme), properties.theme);
    var props = __assign(__assign(__assign({ 
        // default props
        size: '16px', viewBox: '0 0 56 56' }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.icon), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.icon);
    var color = props.color, icon = props.icon, path = props.path, size = props.size, width = props.width, height = props.height, viewBox = props.viewBox, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var iconPath = paths_1.iconPaths[icon] || path;
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.icon({ color: color, width: width, height: height, size: size, theme: theme }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return iconPath ? ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("svg", __assign({}, styling, { className: (0, classnames_1.default)('ss__icon', icon ? "ss__icon--".concat(icon) : null, className), viewBox: viewBox, xmlns: "http://www.w3.org/2000/svg", width: disableStyles ? width || size : undefined, height: disableStyles ? height || size : undefined }),
            (0, react_1.jsx)("path", { fill: disableStyles ? color : undefined, d: iconPath })))) : ((0, react_1.jsx)(preact_1.Fragment, null));
}
exports.Icon = Icon;

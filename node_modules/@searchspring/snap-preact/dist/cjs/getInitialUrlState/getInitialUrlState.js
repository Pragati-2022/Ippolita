"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInitialUrlState = void 0;
var VALID_ACTIONS = ['merge', 'set'];
var DEFAULT_IGNORE_PARAMETERS = ['query', 'tag', 'oq', 'fallbackQuery'];
var getInitialUrlState = function (intitialStateConfig, urlManager) {
    var _a, _b, _c;
    var parameters = intitialStateConfig.parameters;
    var useDefaultIgnoreParameters = (_b = (_a = intitialStateConfig.settings) === null || _a === void 0 ? void 0 : _a.useDefaultIgnoreParameters) !== null && _b !== void 0 ? _b : true;
    // global ignore parameters combine configured ignore with default when set
    var globalIgnoreParameters = ((_c = intitialStateConfig === null || intitialStateConfig === void 0 ? void 0 : intitialStateConfig.settings) === null || _c === void 0 ? void 0 : _c.ignoreParameters) || [];
    globalIgnoreParameters = useDefaultIgnoreParameters ? globalIgnoreParameters.concat(DEFAULT_IGNORE_PARAMETERS) : globalIgnoreParameters;
    var initialUrlState = urlManager;
    var newUrlState = urlManager.merge({});
    Object.keys(parameters).forEach(function (param) {
        var _a;
        var action = parameters[param].action || 'merge';
        var state = parameters[param].state;
        var ignoreParameters = parameters[param].ignoreParameters || [];
        var useGlobalIgnoreParameters = (_a = parameters[param].useGlobalIgnoreParameters) !== null && _a !== void 0 ? _a : true;
        var specificIgnoreParameters = useGlobalIgnoreParameters ? globalIgnoreParameters.concat(ignoreParameters) : ignoreParameters;
        var applyState = Boolean(Object.keys(initialUrlState.state).filter(function (key) { return !specificIgnoreParameters.includes(key); }).length == 0);
        if (state && applyState && VALID_ACTIONS.includes(action)) {
            newUrlState = newUrlState[action](param, state);
        }
    });
    return newUrlState;
};
exports.getInitialUrlState = getInitialUrlState;

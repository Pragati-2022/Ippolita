export declare type Target = {
    selector: string;
    inject?: {
        action: 'before' | 'after' | 'append' | 'prepend' | 'replace';
        element: Element | ((target: Target, element: Element) => Element);
    };
    emptyTarget?: boolean;
    hideTarget?: boolean;
    autoRetarget?: boolean;
    clickRetarget?: boolean | string;
    [any: string]: unknown;
};
export declare type OnTarget = (target: Target, elem: Element, originalElem?: Element) => void;
export declare class DomTargeter {
    private targets;
    private onTarget;
    private document;
    private styleBlockRefs;
    private targetedElems;
    constructor(targets: Array<Target>, onTarget: OnTarget, document?: Document);
    getTargets(): Array<Target>;
    retarget(): void;
    unhideTarget: (selector: string) => void;
    hideTarget: (selector: string) => void;
    private domQuery;
    private inject;
}
//# sourceMappingURL=DomTargeter.d.ts.map
/** @jsx jsx */
import { Fragment } from 'preact';
import { jsx, css } from '@emotion/react';
import classnames from 'classnames';
import { useTheme, CacheProvider } from '../../../providers';
import { iconPaths } from './paths';
const CSS = {
    icon: ({ color, height, width, size, theme }) => css({
        fill: color || theme?.colors?.primary,
        width: width || size,
        height: height || size,
        position: 'relative',
    }),
};
export function Icon(properties) {
    const globalTheme = useTheme();
    const theme = { ...globalTheme, ...properties.theme };
    const props = {
        // default props
        size: '16px',
        viewBox: '0 0 56 56',
        // global theme
        ...globalTheme?.components?.icon,
        // props
        ...properties,
        ...properties.theme?.components?.icon,
    };
    const { color, icon, path, size, width, height, viewBox, disableStyles, className, style } = props;
    const iconPath = iconPaths[icon] || path;
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.icon({ color, width, height, size, theme }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return iconPath ? (jsx(CacheProvider, null,
        jsx("svg", { ...styling, className: classnames('ss__icon', icon ? `ss__icon--${icon}` : null, className), viewBox: viewBox, xmlns: "http://www.w3.org/2000/svg", width: disableStyles ? width || size : undefined, height: disableStyles ? height || size : undefined },
            jsx("path", { fill: disableStyles ? color : undefined, d: iconPath })))) : (jsx(Fragment, null));
}

"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
/** @jsx jsx */
var preact_1 = require("preact");
var mobx_react_lite_1 = require("mobx-react-lite");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var utilities_1 = require("../../../utilities");
var providers_1 = require("../../../providers");
var Button_1 = require("../../Atoms/Button");
var Icon_1 = require("../../Atoms/Icon");
var CSS = {
    filter: function () {
        return (0, react_1.css)({
            textDecoration: 'none',
            display: 'inline-flex',
            '& .ss__filter__button': {
                alignItems: 'center',
                '& .ss__filter__button__icon': {
                    marginRight: '5px',
                },
            },
            '& .ss__filter__label': {
                marginRight: '5px',
                fontWeight: 'bold',
            },
        });
    },
};
// TODO: look into urlManager and how it connects in this case, left the href out for the time being
exports.Filter = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c, _d, _e, _f;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({}, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.filter), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.filter);
    var filter = props.filter, facetLabel = props.facetLabel, valueLabel = props.valueLabel, url = props.url, hideFacetLabel = props.hideFacetLabel, onClick = props.onClick, icon = props.icon, separator = props.separator, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var link = ((_d = filter === null || filter === void 0 ? void 0 : filter.url) === null || _d === void 0 ? void 0 : _d.link) || (url === null || url === void 0 ? void 0 : url.link);
    var value = (filter === null || filter === void 0 ? void 0 : filter.value.label) || valueLabel;
    var label = (filter === null || filter === void 0 ? void 0 : filter.facet.label) || facetLabel;
    var subProps = {
        button: __assign(__assign(__assign({ 
            // default props
            className: 'ss__filter__button' }, (_e = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _e === void 0 ? void 0 : _e.button), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props.theme }),
        icon: __assign(__assign(__assign({ 
            // default props
            icon: 'close-thin', className: 'ss__filter__button__icon', size: '10px' }, (_f = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _f === void 0 ? void 0 : _f.icon), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            icon: icon,
        })), { 
            // component theme overrides
            theme: props.theme }),
    };
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.filter(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return value ? ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("a", __assign({}, styling, { className: (0, classnames_1.default)('ss__filter', className), "aria-label": !label ? value : "remove selected ".concat(label, " filter ").concat(value), onClick: function (e) {
                (link === null || link === void 0 ? void 0 : link.onClick) && link.onClick(e);
                onClick && onClick(e);
            }, href: link === null || link === void 0 ? void 0 : link.href }),
            (0, react_1.jsx)(Button_1.Button, __assign({}, subProps.button, { disableA11y: true }),
                (0, react_1.jsx)(Icon_1.Icon, __assign({}, subProps.icon)),
                !hideFacetLabel && ((0, react_1.jsx)("span", { className: "ss__filter__label" },
                    label,
                    separator && (0, react_1.jsx)("span", { className: "ss__filter__label__separator" }, separator))),
                (0, react_1.jsx)("span", { className: "ss__filter__value" }, value))))) : ((0, react_1.jsx)(preact_1.Fragment, null));
});

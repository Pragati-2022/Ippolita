import type { SearchResponseModel, MetaResponseModel } from '@searchspring/snapi-types';
import { AbstractStore } from '../Abstract/AbstractStore';
import { SearchPaginationStore } from '../Search/Stores';
import { StorageStore } from '../Storage/StorageStore';
import { FinderSelectionStore } from './Stores';
import type { FinderStoreConfig, StoreServices, SelectedSelection, FinderStoreState } from '../types';
import { UrlManager } from '@searchspring/snap-url-manager';
export declare class FinderStore extends AbstractStore {
    services: StoreServices;
    config: FinderStoreConfig;
    meta: MetaResponseModel;
    storage: StorageStore;
    persistedStorage: StorageStore;
    pagination: SearchPaginationStore;
    selections: FinderSelectionStore;
    state: FinderStoreState;
    constructor(config: FinderStoreConfig, services: StoreServices);
    setService(name: keyof StoreServices, service: UrlManager): void;
    save: () => void;
    reset: () => void;
    loadPersisted(): void;
    update(data: SearchResponseModel & {
        meta: MetaResponseModel;
    }, selectedSelections?: SelectedSelection[]): void;
}
//# sourceMappingURL=FinderStore.d.ts.map
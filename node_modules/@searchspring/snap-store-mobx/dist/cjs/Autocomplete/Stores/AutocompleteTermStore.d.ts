import type { UrlManager } from '@searchspring/snap-url-manager';
import type { AutocompleteStateStore } from './AutocompleteStateStore';
import type { AutocompleteStoreConfig, StoreServices } from '../../types';
import type { AutocompleteResponseModelAllOfAutocomplete, SearchResponseModelPagination, SearchResponseModelSearch } from '@searchspring/snapi-types';
export declare class AutocompleteTermStore extends Array<Term> {
    static get [Symbol.species](): ArrayConstructor;
    constructor(services: StoreServices, autocomplete: AutocompleteResponseModelAllOfAutocomplete, paginationData: SearchResponseModelPagination, search: SearchResponseModelSearch, resetTerms: () => void, rootState: AutocompleteStateStore, config: AutocompleteStoreConfig);
}
export declare class Term {
    active: boolean;
    value: string;
    preview: () => void;
    url: UrlManager;
    constructor(services: StoreServices, term: {
        active: boolean;
        value: string;
    }, terms: Term[], resetTerms: () => void, rootState: AutocompleteStateStore);
}
//# sourceMappingURL=AutocompleteTermStore.d.ts.map
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchStore = void 0;
var mobx_1 = require("mobx");
var Stores_1 = require("./Stores");
var AbstractStore_1 = require("../Abstract/AbstractStore");
var StorageStore_1 = require("../Storage/StorageStore");
var SearchStore = /** @class */ (function (_super) {
    __extends(SearchStore, _super);
    function SearchStore(config, services) {
        var _this = this;
        var _a, _b, _c, _d, _e, _f, _g;
        _this = _super.call(this, config) || this;
        if (typeof services != 'object' || typeof ((_a = services.urlManager) === null || _a === void 0 ? void 0 : _a.subscribe) != 'function') {
            throw new Error("Invalid service 'urlManager' passed to SearchStore. Missing \"subscribe\" function.");
        }
        _this.services = services;
        _this.storage = new StorageStore_1.StorageStore();
        var historyConfig = {
            url: (_c = (_b = _this.config.settings) === null || _b === void 0 ? void 0 : _b.history) === null || _c === void 0 ? void 0 : _c.url,
            max: (_e = (_d = _this.config.settings) === null || _d === void 0 ? void 0 : _d.history) === null || _e === void 0 ? void 0 : _e.max,
        };
        if ((_f = _this.config.globals) === null || _f === void 0 ? void 0 : _f.siteId) {
            historyConfig.siteId = (_g = _this.config.globals) === null || _g === void 0 ? void 0 : _g.siteId;
        }
        _this.history = new Stores_1.SearchHistoryStore(historyConfig, _this.services);
        _this.update();
        (0, mobx_1.makeObservable)(_this, {
            search: mobx_1.observable,
            merchandising: mobx_1.observable,
            facets: mobx_1.observable,
            filters: mobx_1.observable,
            results: mobx_1.observable,
            pagination: mobx_1.observable,
            sorting: mobx_1.observable,
        });
        return _this;
    }
    /*
    TODO: refactor sub-store interfaces
    
    interface StoreParameters {
        config?: StoreConfigs;
        services?: StoreServices;
        stores?: {
            storage?: StorageStore;
            state?: StateStore;
        };
        data?: SearchResponseModel & { meta: MetaResponseModel };
    }
    */
    SearchStore.prototype.reset = function () {
        this.update();
    };
    SearchStore.prototype.update = function (data) {
        if (data === void 0) { data = {}; }
        this.error = undefined;
        this.loaded = !!data.pagination;
        this.meta = data.meta || {};
        this.merchandising = new Stores_1.SearchMerchandisingStore(this.services, (data === null || data === void 0 ? void 0 : data.merchandising) || {});
        this.search = new Stores_1.SearchQueryStore(this.services, (data === null || data === void 0 ? void 0 : data.search) || {});
        this.facets = new Stores_1.SearchFacetStore(this.config, this.services, this.storage, data.facets, (data === null || data === void 0 ? void 0 : data.pagination) || {}, this.meta, (data === null || data === void 0 ? void 0 : data.merchandising) || {});
        this.filters = new Stores_1.SearchFilterStore(this.services, data.filters, this.meta);
        this.results = new Stores_1.SearchResultStore(this.config, this.services, (data === null || data === void 0 ? void 0 : data.results) || [], data.pagination, data.merchandising);
        this.pagination = new Stores_1.SearchPaginationStore(this.config, this.services, data.pagination, this.meta);
        this.sorting = new Stores_1.SearchSortingStore(this.services, (data === null || data === void 0 ? void 0 : data.sorting) || [], (data === null || data === void 0 ? void 0 : data.search) || {}, this.meta);
    };
    return SearchStore;
}(AbstractStore_1.AbstractStore));
exports.SearchStore = SearchStore;

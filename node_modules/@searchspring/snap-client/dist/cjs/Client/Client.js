"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
var snap_toolbox_1 = require("@searchspring/snap-toolbox");
var apis_1 = require("./apis");
var deepmerge_1 = __importDefault(require("deepmerge"));
var defaultConfig = {
    mode: snap_toolbox_1.AppMode.production,
    meta: {
        cache: {
            purgeable: false,
        },
    },
    search: {
    // origin: 'https://snapi.kube.searchspring.io'
    },
    autocomplete: {
    // origin: 'https://snapi.kube.searchspring.io'
    },
    recommend: {
    // origin: 'https://snapi.kube.searchspring.io'
    },
    finder: {
    // origin: 'https://snapi.kube.searchspring.io'
    },
    suggest: {
    // origin: 'https://snapi.kube.searchspring.io'
    },
};
var Client = /** @class */ (function () {
    function Client(globals, config) {
        if (config === void 0) { config = {}; }
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;
        this.mode = snap_toolbox_1.AppMode.production;
        if (!(globals === null || globals === void 0 ? void 0 : globals.siteId)) {
            throw 'no siteId specified!';
        }
        this.globals = globals;
        this.config = (0, deepmerge_1.default)(defaultConfig, config);
        if (Object.values(snap_toolbox_1.AppMode).includes(this.config.mode)) {
            this.mode = this.config.mode;
        }
        this.requesters = {
            autocomplete: new apis_1.HybridAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_a = this.config.autocomplete) === null || _a === void 0 ? void 0 : _a.origin,
                headers: (_b = this.config.autocomplete) === null || _b === void 0 ? void 0 : _b.headers,
                cache: (_c = this.config.autocomplete) === null || _c === void 0 ? void 0 : _c.cache,
                globals: (_d = this.config.autocomplete) === null || _d === void 0 ? void 0 : _d.globals,
            }), (_e = this.config.autocomplete) === null || _e === void 0 ? void 0 : _e.requesters),
            meta: new apis_1.HybridAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_f = this.config.meta) === null || _f === void 0 ? void 0 : _f.origin,
                headers: (_g = this.config.meta) === null || _g === void 0 ? void 0 : _g.headers,
                cache: (_h = this.config.meta) === null || _h === void 0 ? void 0 : _h.cache,
                globals: (_j = this.config.meta) === null || _j === void 0 ? void 0 : _j.globals,
            })),
            recommend: new apis_1.RecommendAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_k = this.config.recommend) === null || _k === void 0 ? void 0 : _k.origin,
                headers: (_l = this.config.recommend) === null || _l === void 0 ? void 0 : _l.headers,
                cache: (_m = this.config.recommend) === null || _m === void 0 ? void 0 : _m.cache,
                globals: (_o = this.config.recommend) === null || _o === void 0 ? void 0 : _o.globals,
            })),
            search: new apis_1.HybridAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_p = this.config.search) === null || _p === void 0 ? void 0 : _p.origin,
                headers: (_q = this.config.search) === null || _q === void 0 ? void 0 : _q.headers,
                cache: (_r = this.config.search) === null || _r === void 0 ? void 0 : _r.cache,
                globals: (_s = this.config.search) === null || _s === void 0 ? void 0 : _s.globals,
            })),
            finder: new apis_1.HybridAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_t = this.config.finder) === null || _t === void 0 ? void 0 : _t.origin,
                headers: (_u = this.config.finder) === null || _u === void 0 ? void 0 : _u.headers,
                cache: (_v = this.config.finder) === null || _v === void 0 ? void 0 : _v.cache,
                globals: (_w = this.config.finder) === null || _w === void 0 ? void 0 : _w.globals,
            })),
            suggest: new apis_1.SuggestAPI(new apis_1.ApiConfiguration({
                mode: this.mode,
                origin: (_x = this.config.suggest) === null || _x === void 0 ? void 0 : _x.origin,
                headers: (_y = this.config.suggest) === null || _y === void 0 ? void 0 : _y.headers,
                cache: (_z = this.config.suggest) === null || _z === void 0 ? void 0 : _z.cache,
                globals: (_0 = this.config.suggest) === null || _0 === void 0 ? void 0 : _0.globals,
            })),
        };
    }
    Client.prototype.meta = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var defaultParams;
            return __generator(this, function (_a) {
                defaultParams = { siteId: this.globals.siteId };
                params = (0, deepmerge_1.default)(defaultParams, params || {});
                return [2 /*return*/, this.requesters.meta.getMeta(params)];
            });
        });
    };
    Client.prototype.autocomplete = function (params) {
        var _a, _b;
        if (params === void 0) { params = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_c) {
                if (!((_b = (_a = params.search) === null || _a === void 0 ? void 0 : _a.query) === null || _b === void 0 ? void 0 : _b.string)) {
                    throw 'query string parameter is required';
                }
                params = (0, deepmerge_1.default)(this.globals, params);
                return [2 /*return*/, Promise.all([this.meta({ siteId: params.siteId || '' }), this.requesters.autocomplete.getAutocomplete(params)])];
            });
        });
    };
    Client.prototype.search = function (params) {
        if (params === void 0) { params = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                params = (0, deepmerge_1.default)(this.globals, params);
                return [2 /*return*/, Promise.all([this.meta({ siteId: params.siteId || '' }), this.requesters.search.getSearch(params)])];
            });
        });
    };
    Client.prototype.finder = function (params) {
        if (params === void 0) { params = {}; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                params = (0, deepmerge_1.default)(this.globals, params);
                return [2 /*return*/, Promise.all([this.meta({ siteId: params.siteId || '' }), this.requesters.finder.getFinder(params)])];
            });
        });
    };
    Client.prototype.trending = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                params = (0, deepmerge_1.default)({ siteId: this.globals.siteId }, params || {});
                return [2 /*return*/, this.requesters.suggest.getTrending(params)];
            });
        });
    };
    Client.prototype.recommend = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var tag, otherParams, profileParams, recommendParams, _a, profile, recommendations;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        tag = params.tag, otherParams = __rest(params, ["tag"]);
                        if (!tag) {
                            throw 'tag parameter is required';
                        }
                        profileParams = {
                            tag: tag,
                            siteId: params.siteId || this.globals.siteId,
                        };
                        if (otherParams.branch) {
                            profileParams.branch = otherParams.branch;
                            delete otherParams.branch;
                        }
                        recommendParams = __assign(__assign({ tags: [tag] }, otherParams), { siteId: params.siteId || this.globals.siteId });
                        return [4 /*yield*/, Promise.all([
                                this.requesters.recommend.getProfile(profileParams),
                                this.requesters.recommend.batchRecommendations(recommendParams),
                            ])];
                    case 1:
                        _a = _b.sent(), profile = _a[0], recommendations = _a[1];
                        return [2 /*return*/, __assign(__assign({}, profile), { results: recommendations[0].results })];
                }
            });
        });
    };
    return Client;
}());
exports.Client = Client;

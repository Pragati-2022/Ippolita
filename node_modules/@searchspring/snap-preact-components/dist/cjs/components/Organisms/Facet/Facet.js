"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Facet = void 0;
/** @jsx jsx */
var preact_1 = require("preact");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var mobx_react_lite_1 = require("mobx-react-lite");
var FacetListOptions_1 = require("../../Molecules/FacetListOptions");
var FacetGridOptions_1 = require("../../Molecules/FacetGridOptions");
var FacetPaletteOptions_1 = require("../../Molecules/FacetPaletteOptions");
var FacetHierarchyOptions_1 = require("../../Molecules/FacetHierarchyOptions");
var FacetSlider_1 = require("../../Molecules/FacetSlider");
var SearchInput_1 = require("../../Molecules/SearchInput");
var Icon_1 = require("../../Atoms/Icon");
var Dropdown_1 = require("../../Atoms/Dropdown");
var types_1 = require("../../../types");
var utilities_1 = require("../../../utilities");
var providers_1 = require("../../../providers");
var useA11y_1 = require("../../../hooks/useA11y");
var CSS = {
    facet: function (_a) {
        var _b;
        var color = _a.color, theme = _a.theme;
        return (0, react_1.css)({
            width: '100%',
            margin: '0 0 20px 0',
            '& .ss__facet__header': {
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                color: color,
                border: 'none',
                borderBottom: "2px solid ".concat(((_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.primary) || '#ccc'),
                padding: '6px 0',
            },
            '& .ss__facet__options': {
                marginTop: '8px',
                maxHeight: '300px',
                overflowY: 'auto',
                overflowX: 'hidden',
            },
            '& .ss__facet__show-more-less': {
                display: 'block',
                margin: '8px',
                cursor: 'pointer',
                '& .ss__icon': {
                    marginRight: '8px',
                },
            },
            '& .ss__search-input': {
                margin: '16px 0 0 0',
            },
        });
    },
};
exports.Facet = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;
    var globalTheme = (0, providers_1.useTheme)();
    var theme = __assign(__assign({}, globalTheme), properties.theme);
    var props = __assign(__assign(__assign({ 
        // default props
        limit: 12, disableOverflow: false, iconCollapse: 'angle-up', iconExpand: 'angle-down', showMoreText: 'Show More', showLessText: 'Show Less', iconOverflowMore: 'plus', iconOverflowLess: 'minus', searchable: false }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.facet), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.facet);
    //manual props override on a per facet level using the fields prop
    if (props.fields && props.fields[(_d = props.facet) === null || _d === void 0 ? void 0 : _d.field]) {
        props = __assign(__assign({}, props), props.fields[(_e = props.facet) === null || _e === void 0 ? void 0 : _e.field]);
    }
    var disableCollapse = props.disableCollapse, facet = props.facet, iconCollapse = props.iconCollapse, iconExpand = props.iconExpand, limit = props.limit, disableOverflow = props.disableOverflow, iconColor = props.iconColor, color = props.color, previewOnFocus = props.previewOnFocus, valueProps = props.valueProps, showMoreText = props.showMoreText, showLessText = props.showLessText, iconOverflowMore = props.iconOverflowMore, iconOverflowLess = props.iconOverflowLess, overflowSlot = props.overflowSlot, optionsSlot = props.optionsSlot, disableStyles = props.disableStyles, className = props.className, style = props.style, searchable = props.searchable;
    var subProps = {
        dropdown: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__dropdown', disableClickOutside: true, disableOverlay: true }, (_f = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _f === void 0 ? void 0 : _f.dropdown), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        icon: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__dropdown__icon', size: '12px', color: iconColor || color }, (_g = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _g === void 0 ? void 0 : _g.icon), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        showMoreLessIcon: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__show-more-less__icon', size: '10px', color: iconColor || color }, (_h = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _h === void 0 ? void 0 : _h.icon), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        facetHierarchyOptions: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__facet-hierarchy-options' }, (_j = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _j === void 0 ? void 0 : _j.facetHierarchyOptions), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            previewOnFocus: previewOnFocus,
            valueProps: valueProps,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        facetListOptions: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__facet-list-options' }, (_k = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _k === void 0 ? void 0 : _k.facetListOptions), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            previewOnFocus: previewOnFocus,
            valueProps: valueProps,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        facetGridOptions: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__facet-grid-options' }, (_l = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _l === void 0 ? void 0 : _l.facetGridOptions), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            previewOnFocus: previewOnFocus,
            valueProps: valueProps,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        facetPaletteOptions: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__facet-palette-options' }, (_m = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _m === void 0 ? void 0 : _m.facetPaletteOptions), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            previewOnFocus: previewOnFocus,
            valueProps: valueProps,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        facetSlider: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__facet-slider' }, (_o = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _o === void 0 ? void 0 : _o.facetSlider), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
        searchInput: __assign(__assign(__assign({ 
            // default props
            className: 'ss__facet__search-input' }, (_p = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _p === void 0 ? void 0 : _p.searchInput), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
    };
    var limitedValues;
    if ((facet === null || facet === void 0 ? void 0 : facet.overflow) && limit && Number.isInteger(limit) && !disableOverflow) {
        (_q = facet.overflow) === null || _q === void 0 ? void 0 : _q.setLimit(limit);
        limitedValues = facet === null || facet === void 0 ? void 0 : facet.refinedValues;
    }
    else if ((facet === null || facet === void 0 ? void 0 : facet.overflow) && Number.isInteger(limit)) {
        limitedValues = facet === null || facet === void 0 ? void 0 : facet.values.slice(0, limit);
    }
    else {
        limitedValues = facet === null || facet === void 0 ? void 0 : facet.values;
    }
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.facet({ color: color, theme: theme }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    // Search within facet
    var searchableFacet = {
        allowableTypes: ['list', 'grid', 'palette'],
        searchFilter: function (e) {
            if (facet === null || facet === void 0 ? void 0 : facet.search) {
                facet.search.input = e.target.value;
            }
        },
    };
    return (facet && ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__facet', "ss__facet--".concat(facet.display), "ss__facet--".concat(facet.field), className) }),
            (0, react_1.jsx)(Dropdown_1.Dropdown, __assign({}, subProps.dropdown, { open: disableCollapse || !(facet === null || facet === void 0 ? void 0 : facet.collapsed), onClick: function () { return !disableCollapse && facet.toggleCollapse && (facet === null || facet === void 0 ? void 0 : facet.toggleCollapse()); }, disableA11y: true, button: (0, react_1.jsx)("div", { className: "ss__facet__header", ref: function (e) { return (0, useA11y_1.useA11y)(e, disableCollapse ? -1 : 0); }, role: "heading", "aria-level": 3, "aria-label": "currently ".concat((facet === null || facet === void 0 ? void 0 : facet.collapsed) ? 'collapsed' : 'open', " ").concat(facet.label, " facet dropdown ").concat(((_r = facet.values) === null || _r === void 0 ? void 0 : _r.length) ? ((_s = facet.values) === null || _s === void 0 ? void 0 : _s.length) + ' options' : '') }, facet === null || facet === void 0 ? void 0 :
                    facet.label,
                    !disableCollapse && (0, react_1.jsx)(Icon_1.Icon, __assign({}, subProps.icon, { icon: (facet === null || facet === void 0 ? void 0 : facet.collapsed) ? iconExpand : iconCollapse }))) }),
                searchable && searchableFacet.allowableTypes.includes(facet.display) && ((0, react_1.jsx)(SearchInput_1.SearchInput, __assign({}, subProps.searchInput, { onChange: searchableFacet.searchFilter, placeholder: "Search ".concat(facet.label) }))),
                (0, react_1.jsx)("div", { className: (0, classnames_1.default)('ss__facet__options', className) }, (function () {
                    //manual options component
                    if (optionsSlot) {
                        return (0, utilities_1.cloneWithProps)(optionsSlot, { facet: facet, valueProps: valueProps, limit: limit, previewOnFocus: previewOnFocus });
                    }
                    else {
                        switch (facet === null || facet === void 0 ? void 0 : facet.display) {
                            case types_1.FacetDisplay.SLIDER:
                                return (0, react_1.jsx)(FacetSlider_1.FacetSlider, __assign({}, subProps.facetSlider, { facet: facet }));
                            case types_1.FacetDisplay.GRID:
                                return (0, react_1.jsx)(FacetGridOptions_1.FacetGridOptions, __assign({}, subProps.facetGridOptions, { values: limitedValues, facet: facet }));
                            case types_1.FacetDisplay.PALETTE:
                                return ((0, react_1.jsx)(FacetPaletteOptions_1.FacetPaletteOptions, __assign({}, subProps.facetPaletteOptions, { values: limitedValues, facet: facet })));
                            case types_1.FacetDisplay.HIERARCHY:
                                return ((0, react_1.jsx)(FacetHierarchyOptions_1.FacetHierarchyOptions, __assign({}, subProps.facetHierarchyOptions, { values: limitedValues, facet: facet })));
                            default:
                                return (0, react_1.jsx)(FacetListOptions_1.FacetListOptions, __assign({}, subProps.facetListOptions, { values: limitedValues, facet: facet }));
                        }
                    }
                })()),
                !disableOverflow && ((_t = facet === null || facet === void 0 ? void 0 : facet.overflow) === null || _t === void 0 ? void 0 : _t.enabled) && ((0, react_1.jsx)("div", { className: "ss__facet__show-more-less", onClick: function () { var _a; return (_a = facet.overflow) === null || _a === void 0 ? void 0 : _a.toggle(); }, ref: function (e) { return (0, useA11y_1.useA11y)(e); } }, overflowSlot ? ((0, utilities_1.cloneWithProps)(overflowSlot, { facet: facet })) : ((0, react_1.jsx)(preact_1.Fragment, null,
                    (0, react_1.jsx)(Icon_1.Icon, __assign({}, subProps.showMoreLessIcon, { icon: (((_u = facet.overflow) === null || _u === void 0 ? void 0 : _u.remaining) || 0) > 0 ? iconOverflowMore : iconOverflowLess })),
                    (0, react_1.jsx)("span", null, (((_v = facet === null || facet === void 0 ? void 0 : facet.overflow) === null || _v === void 0 ? void 0 : _v.remaining) || 0) > 0 ? showMoreText : showLessText))))))))));
});

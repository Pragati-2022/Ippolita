/** @jsx jsx */
import { Fragment } from 'preact';
import { jsx, css } from '@emotion/react';
import classnames from 'classnames';
import { useTheme, CacheProvider } from '../../../../providers';
import { ContentType } from '@searchspring/snap-store-mobx';
const CSS = {
    banner: () => css({
        '& iframe, img': {
            maxWidth: '100%',
            height: 'auto',
        },
    }),
};
export function Banner(properties) {
    const globalTheme = useTheme();
    const props = {
        // global theme
        ...globalTheme?.components?.banner,
        // props
        ...properties,
        ...properties.theme?.components?.banner,
    };
    const { content, type, disableStyles, className, style } = props;
    if (type === ContentType.INLINE) {
        console.warn(`BannerType '${ContentType.INLINE}' is not supported in <Banner /> component`);
        return jsx(Fragment, null);
    }
    const styling = {};
    if (!disableStyles) {
        styling.css = [CSS.banner(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    let bannerContent;
    if (content && content[type]) {
        bannerContent = content[type];
    }
    return bannerContent && bannerContent.length ? (jsx(CacheProvider, null,
        jsx("div", { className: classnames('ss__banner', `ss__banner--${type}`, className), ...styling, dangerouslySetInnerHTML: {
                __html: bannerContent.join(''),
            } }))) : (jsx(Fragment, null));
}

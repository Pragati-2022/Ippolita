"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = exports.FALLBACK_IMAGE_URL = void 0;
var hooks_1 = require("preact/hooks");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var providers_1 = require("../../../providers");
exports.FALLBACK_IMAGE_URL = '//cdn.searchspring.net/ajax_search/img/default_image.png';
var CSS = {
    image: function (_a) {
        var visibility = _a.visibility;
        return (0, react_1.css)({
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
            height: 'auto',
            '& img': {
                visibility: visibility,
                flexShrink: '0',
                objectFit: 'contain',
                maxWidth: '100%',
                maxHeight: '100%',
            },
        });
    },
};
function Image(properties) {
    var _a, _b, _c;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({ 
        // default props
        fallback: exports.FALLBACK_IMAGE_URL, lazy: true }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.image), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.image);
    var alt = props.alt, src = props.src, fallback = props.fallback, hoverSrc = props.hoverSrc, lazy = props.lazy, onMouseOver = props.onMouseOver, onMouseOut = props.onMouseOut, onError = props.onError, onLoad = props.onLoad, onClick = props.onClick, disableStyles = props.disableStyles, className = props.className, style = props.style;
    var _d = (0, hooks_1.useState)('hidden'), visibility = _d[0], setVisibility = _d[1];
    var _e = (0, hooks_1.useState)(false), isHovering = _e[0], setHover = _e[1];
    var prevSrcRef = (0, hooks_1.useRef)('');
    (0, hooks_1.useEffect)(function () {
        prevSrcRef.current = src;
    });
    if (prevSrcRef.current && prevSrcRef.current != src) {
        setVisibility('hidden');
    }
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.image({ visibility: visibility }), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("div", __assign({}, styling, { className: (0, classnames_1.default)('ss__image', className) }),
            (0, react_1.jsx)("img", { src: (isHovering ? hoverSrc : src) || fallback, alt: alt, title: alt, loading: lazy ? 'lazy' : undefined, onLoad: function (e) {
                    setVisibility('visible');
                    onLoad && onLoad(e);
                }, onClick: function (e) { return onClick && onClick(e); }, onError: function (e) {
                    e.target.src = fallback || '';
                    onError && onError(e);
                }, onMouseOver: function (e) {
                    hoverSrc && setHover(true);
                    onMouseOver && onMouseOver(e);
                }, onMouseOut: function (e) {
                    hoverSrc && setHover(false);
                    onMouseOut && onMouseOut(e);
                } }))));
}
exports.Image = Image;

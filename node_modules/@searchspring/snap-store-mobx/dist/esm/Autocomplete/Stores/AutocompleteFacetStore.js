import { SearchFacetStore } from '../../Search/Stores';
export class AutocompleteFacetStore extends Array {
    static get [Symbol.species]() {
        return Array;
    }
    constructor(config, services, storage, facetsData, paginationData, meta, rootState, merchandising) {
        // allow for only a singular facet option selection at a time
        const alteredServices = { ...services, urlManager: services.urlManager.remove('filter') };
        const facets = new SearchFacetStore(config, alteredServices, storage, facetsData, paginationData, meta, merchandising);
        // mutate facet values to add 'preview' function
        facets.forEach((facet) => {
            facet.values?.forEach((value) => {
                value.preview = () => {
                    facets.map((facet) => {
                        facet.filtered = false;
                        facet.values?.map((value) => {
                            value.filtered = false;
                        });
                    });
                    facet.filtered = true;
                    value.filtered = true;
                    rootState.locks.facets.lock();
                    value.url.go();
                };
            });
        });
        super(...facets);
    }
}

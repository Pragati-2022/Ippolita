import { useEffect, useRef, useMemo } from 'preact/hooks';
import { dequal as deepEqual } from 'dequal';
export function useDeepCompareMemoize(value) {
    const ref = useRef(value);
    const signalRef = useRef(0);
    if (!deepEqual(value, ref.current)) {
        ref.current = value;
        signalRef.current += 1;
    }
    return useMemo(() => ref.current, [signalRef.current]);
}
export function useDeepCompareEffect(callback, dependencies) {
    return useEffect(callback, [useDeepCompareMemoize(dependencies)]);
}

import { SearchRequestModel, SearchRequestModelSortsDirectionEnum, SearchRequestModelFilterRangeAllOfValue } from '@searchspring/snapi-types';
export declare function transformSearchRequest(request: SearchRequestModel): any;
export declare namespace transformSearchRequest {
    var sorts: (request?: SearchRequestModel) => Record<string, SearchRequestModelSortsDirectionEnum[]>;
    var search: (request?: SearchRequestModel) => {
        q?: string | undefined;
        rq?: string | undefined;
        originalQuery?: string | undefined;
        fallbackQuery?: string | undefined;
        redirectResponse?: string | undefined;
    };
    var filters: (request?: SearchRequestModel) => Record<string, (string | number | SearchRequestModelFilterRangeAllOfValue | undefined)[]>;
    var merchandising: (request?: SearchRequestModel) => {
        disableMerchandising?: boolean | undefined;
        tag?: string[] | undefined;
        'landing-page'?: string | undefined;
        intellisuggest?: boolean | undefined;
        disableInlineBanners?: boolean | undefined;
    };
    var pagination: (request?: SearchRequestModel) => {
        page?: number | undefined;
        resultsPerPage?: number | undefined;
    };
    var siteId: (request?: SearchRequestModel) => {
        siteId: string;
    } | {
        siteId?: undefined;
    };
    var facets: (request?: SearchRequestModel) => {
        includedFacets?: string[] | undefined;
        excludedFacets?: string[] | undefined;
        disableFacetDrillDown?: boolean | undefined;
    };
    var tracking: (request?: SearchRequestModel) => {
        userId?: string | undefined;
        domain?: string | undefined;
        sessionId?: string | undefined;
        pageLoadId?: string | undefined;
    };
    var personalization: (request?: SearchRequestModel) => {
        skipPersonalization?: boolean | undefined;
        cart?: string | undefined;
        shopper?: string | undefined;
        lastViewed?: string | undefined;
    };
}
//# sourceMappingURL=searchRequest.d.ts.map
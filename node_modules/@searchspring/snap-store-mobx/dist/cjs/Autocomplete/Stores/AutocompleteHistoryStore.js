"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutocompleteHistoryStore = void 0;
var AutocompleteTermStore_1 = require("./AutocompleteTermStore");
var AutocompleteHistoryStore = /** @class */ (function (_super) {
    __extends(AutocompleteHistoryStore, _super);
    function AutocompleteHistoryStore(services, queries, resetTerms, rootState) {
        var terms = [];
        queries === null || queries === void 0 ? void 0 : queries.map(function (query) {
            terms.push(new AutocompleteTermStore_1.Term(services, {
                active: false,
                value: query,
            }, terms, resetTerms, rootState));
        });
        return _super.apply(this, terms) || this;
    }
    Object.defineProperty(AutocompleteHistoryStore, Symbol.species, {
        get: function () {
            return Array;
        },
        enumerable: false,
        configurable: true
    });
    return AutocompleteHistoryStore;
}(Array));
exports.AutocompleteHistoryStore = AutocompleteHistoryStore;

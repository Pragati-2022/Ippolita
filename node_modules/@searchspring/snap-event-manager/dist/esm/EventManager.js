import { MiddlewareManager } from './MiddlewareManager';
export class EventManager {
    constructor() {
        this.events = {};
        // noop
    }
    async fire(event, context) {
        if (this.events[event]) {
            await this.events[event].dispatch(context);
        }
        return Promise.resolve();
    }
    on(event, ...func) {
        if (!this.events[event]) {
            this.events[event] = new MiddlewareManager();
        }
        this.events[event].use(...func);
    }
}

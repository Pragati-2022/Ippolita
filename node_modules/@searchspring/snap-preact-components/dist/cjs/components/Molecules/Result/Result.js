"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Result = void 0;
/** @jsx jsx */
var preact_1 = require("preact");
var mobx_react_lite_1 = require("mobx-react-lite");
var react_1 = require("@emotion/react");
var classnames_1 = __importDefault(require("classnames"));
var Image_1 = require("../../Atoms/Image");
var Badge_1 = require("../../Atoms/Badge");
var Price_1 = require("../../Atoms/Price");
var providers_1 = require("../../../providers");
var utilities_1 = require("../../../utilities");
var snap_toolbox_1 = require("@searchspring/snap-toolbox");
var types_1 = require("../../../types");
var CSS = {
    result: function () {
        return (0, react_1.css)({
            '&.ss__result--grid': {
                display: 'flex',
                flexDirection: 'column',
                height: '100%',
                '& .ss__result__image-wrapper': {
                    flex: '1 0 auto',
                    minHeight: '0%',
                },
            },
            '&.ss__result--list': {
                display: 'flex',
                flexDirection: 'row',
                '& .ss__result__image-wrapper': {
                    flex: '0 0 33%',
                },
                '& .ss__result__details': {
                    flex: '1 1 auto',
                    textAlign: 'left',
                    marginLeft: '20px',
                    padding: 0,
                },
            },
            '& .ss__result__image-wrapper': {
                position: 'relative',
                '& .ss__result__badge': {
                    background: 'rgba(255, 255, 255, 0.5)',
                    padding: '10px',
                },
            },
            '& .ss__result__details': {
                padding: '10px',
                textAlign: 'center',
                '& .ss__result__details__title': {
                    marginBottom: '10px',
                },
                '& .ss__result__details__pricing': {
                    marginBottom: '10px',
                    '& .ss__result__price': {
                        fontSize: '1.2em',
                    },
                    '& .ss__price--strike': {
                        fontSize: '80%',
                    },
                },
                '& .ss__result__details__button': {
                    marginBottom: '10px',
                },
            },
        });
    },
};
exports.Result = (0, mobx_react_lite_1.observer)(function (properties) {
    var _a, _b, _c, _d, _e, _f, _g;
    var globalTheme = (0, providers_1.useTheme)();
    var props = __assign(__assign(__assign({ 
        // default props
        layout: types_1.Layout.GRID }, (_a = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _a === void 0 ? void 0 : _a.result), properties), (_c = (_b = properties.theme) === null || _b === void 0 ? void 0 : _b.components) === null || _c === void 0 ? void 0 : _c.result);
    var result = props.result, hideBadge = props.hideBadge, hideTitle = props.hideTitle, hidePricing = props.hidePricing, hideImage = props.hideImage, detailSlot = props.detailSlot, fallback = props.fallback, disableStyles = props.disableStyles, className = props.className, layout = props.layout, onClick = props.onClick, style = props.style, controller = props.controller;
    var core = (_d = result === null || result === void 0 ? void 0 : result.mappings) === null || _d === void 0 ? void 0 : _d.core;
    var subProps = {
        price: __assign(__assign(__assign({ 
            // global theme
            className: 'ss__result__price' }, (_e = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _e === void 0 ? void 0 : _e.price), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props.theme }),
        badge: __assign(__assign(__assign({ 
            // default props
            className: 'ss__result__badge', content: 'Sale' }, (_f = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _f === void 0 ? void 0 : _f.badge), (0, utilities_1.defined)({
            disableStyles: disableStyles,
        })), { 
            // component theme overrides
            theme: props.theme }),
        image: __assign(__assign(__assign({ 
            // default props
            className: 'ss__result__image', alt: core === null || core === void 0 ? void 0 : core.name, src: core === null || core === void 0 ? void 0 : core.imageUrl }, (_g = globalTheme === null || globalTheme === void 0 ? void 0 : globalTheme.components) === null || _g === void 0 ? void 0 : _g.image), (0, utilities_1.defined)({
            disableStyles: disableStyles,
            fallback: fallback,
        })), { 
            // component theme overrides
            theme: props === null || props === void 0 ? void 0 : props.theme }),
    };
    var onSale = Boolean((core === null || core === void 0 ? void 0 : core.msrp) && core.price && (core === null || core === void 0 ? void 0 : core.msrp) * 1 > (core === null || core === void 0 ? void 0 : core.price) * 1);
    var displayName = core === null || core === void 0 ? void 0 : core.name;
    if (props.truncateTitle) {
        displayName = snap_toolbox_1.filters.truncate((core === null || core === void 0 ? void 0 : core.name) || '', props.truncateTitle.limit, props.truncateTitle.append);
    }
    var styling = {};
    if (!disableStyles) {
        styling.css = [CSS.result(), style];
    }
    else if (style) {
        styling.css = [style];
    }
    return core ? ((0, react_1.jsx)(providers_1.CacheProvider, null,
        (0, react_1.jsx)("article", __assign({}, styling, { className: (0, classnames_1.default)('ss__result', "ss__result--".concat(layout), className) }),
            (0, react_1.jsx)("div", { className: "ss__result__image-wrapper" },
                (0, react_1.jsx)("a", { href: core.url, onClick: function (e) {
                        var _a, _b;
                        onClick && onClick(e);
                        (_b = (_a = controller === null || controller === void 0 ? void 0 : controller.track) === null || _a === void 0 ? void 0 : _a.product) === null || _b === void 0 ? void 0 : _b.click(e, result);
                    } },
                    !hideBadge && onSale && (0, react_1.jsx)(Badge_1.Badge, __assign({}, subProps.badge)),
                    !hideImage && (0, react_1.jsx)(Image_1.Image, __assign({}, subProps.image)))),
            (0, react_1.jsx)("div", { className: "ss__result__details" },
                !hideTitle && ((0, react_1.jsx)("div", { className: "ss__result__details__title" },
                    (0, react_1.jsx)("a", { href: core.url, onClick: function (e) {
                            var _a, _b;
                            onClick && onClick(e);
                            (_b = (_a = controller === null || controller === void 0 ? void 0 : controller.track) === null || _a === void 0 ? void 0 : _a.product) === null || _b === void 0 ? void 0 : _b.click(e, result);
                        }, dangerouslySetInnerHTML: {
                            __html: displayName || '',
                        } }))),
                !hidePricing && ((0, react_1.jsx)("div", { className: "ss__result__details__pricing" }, core.msrp && core.price && core.price < core.msrp ? ((0, react_1.jsx)(preact_1.Fragment, null,
                    (0, react_1.jsx)(Price_1.Price, __assign({}, subProps.price, { value: core.msrp, lineThrough: true })),
                    "\u00A0",
                    (0, react_1.jsx)(Price_1.Price, __assign({}, subProps.price, { value: core.price })))) : ((0, react_1.jsx)(Price_1.Price, __assign({}, subProps.price, { value: core.price }))))),
                (0, utilities_1.cloneWithProps)(detailSlot, { result: result }))))) : ((0, react_1.jsx)(preact_1.Fragment, null));
});

import type { UrlManager } from '@searchspring/snap-url-manager';
import type { StoreServices } from '../../types';
import type { SearchResponseModelFilter, MetaResponseModel, SearchResponseModelFilterRange, SearchResponseModelFilterValue, MetaResponseModelFacetDefaults, MetaResponseModelFacet } from '@searchspring/snapi-types';
export declare class SearchFilterStore extends Array<RangeFilter | Filter> {
    static get [Symbol.species](): ArrayConstructor;
    constructor(services: StoreServices, filtersData: SearchResponseModelFilter[] | undefined, meta: MetaResponseModel);
}
export declare class Filter {
    label: string;
    facet: {
        field?: string;
        label?: string;
    };
    value: {
        value?: string;
        label?: string;
    };
    url: UrlManager;
    constructor(services: StoreServices, filter: SearchResponseModelFilterValue, meta: MetaResponseModelFacet & MetaResponseModelFacetDefaults);
}
export declare class RangeFilter {
    label: string;
    facet: {
        field?: string;
        label?: string;
    };
    value: {
        low?: number;
        high?: number;
        label: string;
    };
    url: UrlManager;
    constructor(services: StoreServices, filter: SearchResponseModelFilterRange, meta: MetaResponseModelFacet & MetaResponseModelFacetDefaults);
}
//# sourceMappingURL=SearchFilterStore.d.ts.map